@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common
@using WarehouseApp.ViewModels
@model X.PagedList.IPagedList<ComponentViewModel>

@{
    ViewData["Title"] = "Товары";
}

<h1>Товары</h1>

<p>
    <a asp-action="Create">Добавить новый товар</a>
</p>

@using (Html.BeginForm())
{
    <div style="display:flex;">
        <div style="margin-right: 15px;">
            <p>Введите поставщика: </p>
            <input type="text" name="searchSupplier" value="@ViewBag.CurrentFilter1?.ToString()" />
        </div>
        <div>
            <p>Введите тип товара:</p>
            <input type="text" name="searchType" value="@ViewBag.CurrentFilter2?.ToString()" />
        </div>
    </div>


    <p style="margin-top: 15px;">
        <input type="submit" value="Отправить" />
        <a class="alink-reset" asp-action="Index" asp-route-reset="1">
            Сбросить фильтрацию
        </a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                Наименование
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.Price">
                    Цена
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.Amount">
                    Количество
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.Date">
                    Дата поступления
                </a>
                
            </th>
            <th>
                Тип товара
            </th>
            <th>
                Поставщик
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeComponentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupplierName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ComponentId">Изменить</a> |
                <a asp-action="Details" asp-route-id="@item.ComponentId">Подробнее</a> |
                <a asp-action="Delete" asp-route-id="@item.ComponentId">Удалить</a>
            </td>
        </tr>
}
    </tbody>
</table>


Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter1=ViewBag.CurrentFilter1, currentFilter2=ViewBag.CurrentFilter2 }), new PagedListRenderOptions {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }})
